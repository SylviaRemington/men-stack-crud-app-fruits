<!-- Now onto the "Build the New Fruit Page" of Module "MEN Stack CRUD App Fruits" -->

<!-- views/fruits/new.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create a Fruit</title>
  </head>
  <body>
    <h1>Create a New Fruit!</h1>
    <!-- CREATING POST REQUEST TO /fruits -->
     <!-- CREATING A FORM HERE -->
    <form action="/fruits" method="POST">
        <!-- In the form you have an action with the end point you want to call. -->
        <label for="name">Name:</label>
        <input type="text" name="name" id="name">

        <label for="isReadyToEat">Ready to eat?</label>
        <input type="checkbox" name="isReadyToEat" id="isReadyToEat">

        <button type="submit">Add Fruit</button> 
        <!-- This button type submit is quite important. -->
         <!-- Clicking that button submits the form and tries to make post request to that end point. -->
    </form>

    <a href="/fruits/">Back to Fruits</a>
    <br>
    <a href="/">Back to Homepage</a>


  </body>
</html>




<!-- HOW THE FORM STUFF LOOKS ALL TOGETHER (FROM ABOVE) -->
  <!-- <form action="/fruits" method="POST">
    <label for="name">Name:</label>
    <input type="text" name="name" id="name" />

    <label for="isReadyToEat">Ready to Eat?</label>
    <input type="checkbox" name="isReadyToEat" id="isReadyToEat" />

    <button type="submit">Add Fruit</button>
  </form> -->





  <!-- ADDTL NOTES ABOUT VIEWS & WHAT IT DOES -->
   <!-- Sure. Here’s a beginner-friendly explanation of the views file in a MEN stack CRUD app:

1. The views file controls what shows up on the screen in the browser.

2. It usually contains HTML with some special code (like EJS) to show data from the database.

3. You use it to create the layout and structure of the page, like headers, buttons, and forms.

4. If you want to show a list of items, the views file helps display each one using a loop.

5. If you want to let users fill out a form, that form goes inside the views file too.

6. When the user submits a form, the views file sends that data to the server.

7. The server (using routes and models) handles the form data and updates the database.

8. After the database changes, the views file can show the updated info on the screen.

9. It’s closely connected to the Read and Create/Update parts of CRUD.

10. In short, the views file is the part of your app that lets users see and interact with your data. -->





